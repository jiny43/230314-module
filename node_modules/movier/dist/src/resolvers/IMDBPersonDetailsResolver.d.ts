import { IPersonalDetailItem } from "../interfaces";
import { ImageType } from "../enums";
import { Cheerio, Element } from "cheerio";
import { IPerson, IPersonDetailsResolver, ISourceDetails, IFilmographyItem, IImageDetails, IKnownForItem } from "../interfaces";
export declare class IMDBPersonDetailsResolver implements IPersonDetailsResolver {
    private url;
    private resolverCacheManager;
    private mainPageHTMLData;
    private bioPageHTMLData;
    private mediaIndexPageHTMLData;
    private mainPageCheerio;
    private bioPageCheerio;
    private mediaIndexPageCheerio;
    private mainPageNextData;
    private filmographyData;
    constructor(url: string);
    getDetails(): Promise<IPerson | undefined>;
    getMainPageHTMLData(): Promise<void>;
    getBioPageHTMLData(): Promise<void>;
    getMediaIndexPageHTMLData(): Promise<void>;
    getFilmographyData(): Promise<void>;
    addToPathOfUrl(originalPath: string, joinPath: string, query?: {
        [key: string]: string;
    }): string;
    generateReturnDetailsData(): IPerson | undefined;
    get mainSourceDetails(): ISourceDetails;
    get sourceId(): string;
    get name(): string;
    get miniBio(): string[];
    get knownFor(): IKnownForItem[];
    extractImageFullDetailsFromImgElement(thumbnailImgEl: Cheerio<Element>, type?: ImageType): IImageDetails;
    extractSourceDetailsFromAElement(aElement: Cheerio<Element>, sourceIdPrefix: string): ISourceDetails;
    get filmography(): IFilmographyItem[];
    get profileImage(): IImageDetails | undefined;
    get allImages(): IImageDetails[];
    get personalDetails(): IPersonalDetailItem[];
    get birthDate(): Date | undefined;
    get birthPlace(): string | undefined;
    get deathDate(): Date | undefined;
    get deathPlace(): string | undefined;
}
