import { IPersonDetails, ISourceDetails, IReleaseDateDetails, ITitleGoofItem, ITitleQuoteItem, IProductionCompanyDetails, IRateDetails, ICastDetails, IDatesDetails, IBoxOfficeDetails, IRuntimeDetails, IAwardsSummaryDetails, IAwardDetails, IImageDetails } from "./../interfaces";
import { Genre, TitleMainType } from "../enums";
import { ITitle, ITitleDetailsResolver } from "../interfaces";
export declare class IMDBTitleDetailsResolver implements ITitleDetailsResolver {
    private url;
    private titleApiRawData;
    constructor(url: string);
    getDetails(): Promise<ITitle>;
    getTitleRawDetails(): Promise<void>;
    extractSourceFromId(id: string): ISourceDetails;
    getEnumItemFromString<T extends Object>(enumObject: T, value: string, defaultValue?: T): T | undefined;
    get mainSource(): ISourceDetails;
    get worldWideName(): string;
    get otherNames(): string[];
    get genres(): Genre[];
    get directors(): IPersonDetails[];
    get writers(): IPersonDetails[];
    get producers(): IPersonDetails[];
    get mainRate(): IRateDetails;
    get casts(): ICastDetails[];
    get dates(): IDatesDetails;
    get boxOffice(): IBoxOfficeDetails;
    get productionCompanies(): IProductionCompanyDetails[];
    get taglines(): string[];
    get runtime(): IRuntimeDetails;
    get awardsSummary(): IAwardsSummaryDetails;
    get goofs(): ITitleGoofItem[];
    get quotes(): ITitleQuoteItem[];
    get awards(): IAwardDetails[];
    get keywords(): string[];
    get allImages(): IImageDetails[];
    get languages(): string[];
    get mainType(): TitleMainType;
    get posterImage(): IImageDetails;
    get countriesOfOrigin(): string[];
    get allReleaseDates(): IReleaseDateDetails[];
    get ageCategoryTitle(): string;
    get allRates(): IRateDetails[];
}
